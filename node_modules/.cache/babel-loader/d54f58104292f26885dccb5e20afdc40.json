{"ast":null,"code":"var _jsxFileName = \"/home/anand/Downloads/react-project/learncode/src/components/ModalExample.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalExample = props => {\n  _s();\n\n  const {\n    buttonLabel,\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"danger\",\n      onClick: toggle,\n      children: buttonLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Subcribe to Learncode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: \"If you subcribe the learncode ,we will send email when new content is uploaded.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: toggle,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalExample, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n\n_c = ModalExample;\nexport default ModalExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalExample\");","map":{"version":3,"sources":["/home/anand/Downloads/react-project/learncode/src/components/ModalExample.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalExample","props","buttonLabel","className","modal","setModal","toggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ;AAKA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMY,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAEE,MAAhC;AAAA,gBAAyCJ;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEE,KAAf;AAAsB,MAAA,MAAM,EAAEE,MAA9B;AAAsC,MAAA,SAAS,EAAEH,SAAjD;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAEA,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAC8D,GAD9D,eAEE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,OAAO,EAAEA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAzBD;;GAAMN,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst ModalExample = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Subcribe to Learncode</ModalHeader>\n        <ModalBody>\n          If you subcribe the learncode ,we will send email when new content is uploaded.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggle}>Subscribe</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}